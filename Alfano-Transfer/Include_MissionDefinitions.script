% Mission Definitions Include File
% Changes:
%	Baseline 03/1/2019 - Copied from AIAA-2018-4178 Orbit Transfer collection
%   Change 05/22/2019 - Incoporate changed YawAngles signature, corrected AOL computation
%	Change 06/07/2019 - Corrected computation of Revolutions using orbit period

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------
Create Array CONTROL[1,3];
Create Variable ORBIT_R AOL REV REV_LAST T0_AT_REV T_REV REV_ERR CURRINCL;
GMAT CONTROL(1, 1) = 1;
GMAT ORBIT_R = 1;
GMAT AOL = 0;
GMAT REV = 0;
GMAT REV_LAST = 12000;
GMAT REV_ERR = 0;
GMAT T0_AT_REV = 0;
GMAT T_REV = 0;
GMAT CURRINCL = 0;
%----------------------------------------
%--------- The following are autogenerated.
%----------------------------------------
%Create Variable SMA_INIT;
%GMAT SMA_INIT = 6878.136;
%Create Variable COSTATE;
%GMAT COSTATE = -0.79;
%Create Variable MORE;
%GMAT MORE = 1;
%Create Variable SMA_END;
%GMAT SMA_END = 68781.36;
%Create Variable PL_MASS
%GMAT PL_MASS = 0.0;

%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

Propagate 'Propagate to periapsis' TrimPropagator(EOTV) {EOTV.Earth.Periapsis};
% Start at the same point each time.

BeginFiniteBurn 'GEOTransfer' ContinuousThrust(EOTV);
% If the trajectory defined by the costate is over-aggressive, the EOTV will arrive at inclination
% at lower altitude than desired.
% If the trajectory is not aggressive enough, the EOTV will arrive at inclination at higher altitude.
GMAT SMA_INIT = EOTV.SMA;
GMAT REV_LAST = EOTV.Earth.OrbitPeriod;
GMAT T0_AT_REV = EOTV.ElapsedSecs;
GMAT REV = REV + 1;

While EOTV.SMA <= SMA_END
% The costate value "blends" inclination change with altitude change, such that the resultant trajectory
% should have arrived at the desired altitude when the inclination change is accomplished.
% Precision of the inclination result prevents consistent stopping condition.
% TODO - apply a differential correction to the costate and iterate.
   
   GMAT AOL = EOTV.TA + EOTV.AOP;
   % AOP is measured relative to the ascending node, TA is measured relative to the AOP.
   % This works as long as the target plane for inclination change is the equatorial plane.
   If AOL > 360.0
      GMAT AOL = AOL - 360.0;
   EndIf;
   
   GMAT T_REV = EOTV.ElapsedSecs - T0_AT_REV;
   
   If T_REV >= REV_LAST
      % T_REV is elapsed time, REV_LAST is earth orbit period at beginning of rev.
      GMAT REV_ERR = T_REV - REV_LAST;
      GMAT REV_LAST = EOTV.Earth.OrbitPeriod;
      GMAT T0_AT_REV = EOTV.ElapsedSecs - REV_ERR;
      % TODO, interpolate EOTV.Earth.OrbitPeriod      
      GMAT REV = REV + 1;
   EndIf;
   
   GMAT [CONTROL] = Python.YawAngles.get_control_onrev(COSTATE, AOL, EOTV.Earth.SMA, SMA_INIT, MORE);
	  
   GMAT EOTV.HET1.ThrustDirection1 = CONTROL(1,1);
   GMAT EOTV.HET1.ThrustDirection2 = CONTROL(1,2);
   GMAT EOTV.HET1.ThrustDirection3 = CONTROL(1,3);
      
   Propagate 'Propagate Steps' DefaultProp(EOTV);

EndWhile;

EndFiniteBurn 'GEOTransfer' ContinuousThrust(EOTV);

